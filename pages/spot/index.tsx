import {
  Heading,
  Stack,
  Center,
  Box,
  Flex,
  Spacer,
  SimpleGrid,
} from "@chakra-ui/layout";
import Head from "next/head";
import axios from "../../constants/axios";
import { Spot } from "../../types/spot";
import SpotCard from "../../src/components/SpotCard/SpotCard";
import useSWR from "swr";
import { useState } from "react";
import { Button, ButtonGroup } from "@chakra-ui/react";
import { MdKeyboardArrowRight, MdKeyboardArrowLeft } from "react-icons/md";
import { Skeleton, SkeletonCircle, SkeletonText } from "@chakra-ui/react";

const SpotIndex: React.FC = () => {
  const fetcher = (url: string) =>
    axios.get(url).then((res) => {
      setTotalPages(res.data.meta.totalPages);
      return res.data.spots;
    });
  const [pageIndex, setPageIndex] = useState<number>(1);
  const [totalPages, setTotalPages] = useState<number>(1);
  const { data: spots, error } = useSWR(
    `/api/spots?page=${pageIndex}`,
    fetcher
  );

  if (error) return <h1>error</h1>;
  if (!spots)
    return (
      <Center>
        <Stack p={8} w="lg">
          <SkeletonText
            height="30px"
            width="250px"
            noOfLines={2}
          ></SkeletonText>
          <SimpleGrid columns={[1, null, 2]} spacing={4}>
            <Box borderWidth="1px" rounded={"md"} p={5}>
              <SkeletonText noOfLines={2}></SkeletonText>
              <Flex pt={5}>
                <SkeletonCircle mr={2}></SkeletonCircle>
                <SkeletonText
                  height="30px"
                  width="100px"
                  noOfLines={2}
                ></SkeletonText>
                <Spacer />
                <SkeletonText
                  height="30px"
                  width="100px"
                  noOfLines={1}
                ></SkeletonText>
              </Flex>
            </Box>
            <Box borderWidth="1px" rounded={"md"} p={5}>
              <SkeletonText noOfLines={2}></SkeletonText>
              <Flex pt={5}>
                <SkeletonCircle mr={2}></SkeletonCircle>
                <SkeletonText
                  height="30px"
                  width="100px"
                  noOfLines={2}
                ></SkeletonText>
                <Spacer />
                <SkeletonText
                  height="30px"
                  width="100px"
                  noOfLines={1}
                ></SkeletonText>
              </Flex>
            </Box>
            <Box borderWidth="1px" rounded={"md"} p={5}>
              <SkeletonText noOfLines={2}></SkeletonText>
              <Flex pt={5}>
                <SkeletonCircle mr={2}></SkeletonCircle>
                <SkeletonText
                  height="30px"
                  width="100px"
                  noOfLines={2}
                ></SkeletonText>
                <Spacer />
                <SkeletonText
                  height="30px"
                  width="100px"
                  noOfLines={1}
                ></SkeletonText>
              </Flex>
            </Box>
          </SimpleGrid>
        </Stack>
      </Center>
    );

  return (
    <div>
      <Head>
        <title>SkateSpot</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Center>
          <Stack px={4} py={8} w="2xl">
            <Heading>スポット一覧</Heading>
            <SimpleGrid columns={[1, null, 2]} spacing={4}>
              {spots.map((spot: Spot) => {
                return <SpotCard key={spot.id} spot={spot} />;
              })}
            </SimpleGrid>
            <Flex justifyContent="space-between">
              <Button
                disabled={pageIndex == 1}
                onClick={() => setPageIndex(pageIndex - 1)}
                leftIcon={<MdKeyboardArrowLeft />}
                variant="outline"
              >
                Previous
              </Button>
              <Button
                disabled={pageIndex == totalPages}
                onClick={() => setPageIndex(pageIndex + 1)}
                rightIcon={<MdKeyboardArrowRight />}
                variant="outline"
              >
                Next
              </Button>
            </Flex>
          </Stack>
        </Center>
      </main>
    </div>
  );
};
export default SpotIndex;
